内部类

1、类中定义类.

场景:
class Body{

}
class Heart{

}
---------
将Heart类放在Body类的内部.体现人体中有心脏

内部类分类:
1>普通内部类(成员内部类)
  a>可以使用四种访问修饰符
  b>创建内部类对象
    先要创建外部类对象,然后通过已经创建好的外部类对象创建内部类对象
    外部类.内部类  对象=外部类对象.new 内部类();
  c>内部类中可以直接访问外部类中成员属性和成员方法
    如果内部类中定义有和外部类相同的成员变量或者成员方法的时候，默认情况优先
    使用内部类自己的。如果要明确指定使用外部类的成员。外部类.this.成员;
    外部类.this--获得外部类对象的引用

2>方法内部类
  a>在方法中定义的类
  b>只能在方法使用，不能被外部访问
  c>在方法内部类中可以访问方法中的局部变量，但是必须使用final修饰的变量；
  也可以范围外部类中定义的成员
  

3>嵌套内部类(静态内部类)
  定义和成员内部类相似，用static关键字进行修饰,相当于静态成员
  静态内部类创建对象的方法:
  外部类.内部类  对象=new 外部类.内部类();
  
4>匿名内部类
  用于偷懒:抽象类和接口都是不能直接创建对象的,必须继承或者实现抽象类和接口中的所有
  抽象方法，才能创建对象。

  new 抽象类或者接口(){
	//实现所有的抽象方法
  };
