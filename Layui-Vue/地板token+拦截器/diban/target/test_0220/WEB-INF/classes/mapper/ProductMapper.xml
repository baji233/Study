<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jy.dao.ProductMapper" >

  <select id="findByPage" parameterType="java.lang.Integer" resultType="com.jy.entity.Product">
    select * from product limit #{index},#{count}
  </select>



  <resultMap id="BaseResultMap" type="com.jy.entity.Product" >
    <id column="productId" property="productid" jdbcType="INTEGER" />
    <result column="productClass" property="productclass" jdbcType="VARCHAR" />
    <result column="productName" property="productname" jdbcType="VARCHAR" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="geothermal" property="geothermal" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="trait" property="trait" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="series" property="series" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    productId, productClass, productName, model, specifications, level, geothermal, place, 
    trait, img, time, series
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jy.entity.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where productId = #{productid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where productId = #{productid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jy.entity.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jy.entity.Product" >
    insert into product (productId, productClass, productName, 
      model, specifications, level, 
      geothermal, place, trait, 
      img, time, series)
    values (#{productid,jdbcType=INTEGER}, #{productclass,jdbcType=VARCHAR}, #{productname,jdbcType=VARCHAR}, 
      #{model,jdbcType=VARCHAR}, #{specifications,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{geothermal,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, #{trait,jdbcType=VARCHAR}, 
      #{img,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{series,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jy.entity.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productid != null" >
        productId,
      </if>
      <if test="productclass != null" >
        productClass,
      </if>
      <if test="productname != null" >
        productName,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="specifications != null" >
        specifications,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="geothermal != null" >
        geothermal,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="trait != null" >
        trait,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="series != null" >
        series,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productid != null" >
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="productclass != null" >
        #{productclass,jdbcType=VARCHAR},
      </if>
      <if test="productname != null" >
        #{productname,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="geothermal != null" >
        #{geothermal,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="trait != null" >
        #{trait,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="series != null" >
        #{series,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jy.entity.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.productid != null" >
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.productclass != null" >
        productClass = #{record.productclass,jdbcType=VARCHAR},
      </if>
      <if test="record.productname != null" >
        productName = #{record.productname,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.specifications != null" >
        specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.geothermal != null" >
        geothermal = #{record.geothermal,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.trait != null" >
        trait = #{record.trait,jdbcType=VARCHAR},
      </if>
      <if test="record.img != null" >
        img = #{record.img,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.series != null" >
        series = #{record.series,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set productId = #{record.productid,jdbcType=INTEGER},
      productClass = #{record.productclass,jdbcType=VARCHAR},
      productName = #{record.productname,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      specifications = #{record.specifications,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      geothermal = #{record.geothermal,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      trait = #{record.trait,jdbcType=VARCHAR},
      img = #{record.img,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      series = #{record.series,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jy.entity.Product" >
    update product
    <set >
      <if test="productclass != null" >
        productClass = #{productclass,jdbcType=VARCHAR},
      </if>
      <if test="productname != null" >
        productName = #{productname,jdbcType=VARCHAR},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null" >
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="geothermal != null" >
        geothermal = #{geothermal,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="trait != null" >
        trait = #{trait,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="series != null" >
        series = #{series,jdbcType=INTEGER},
      </if>
    </set>
    where productId = #{productid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jy.entity.Product" >
    update product
    set productClass = #{productclass,jdbcType=VARCHAR},
      productName = #{productname,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      geothermal = #{geothermal,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      trait = #{trait,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      series = #{series,jdbcType=INTEGER}
    where productId = #{productid,jdbcType=INTEGER}
  </update>
</mapper>